<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<job id="job1" parent="simpleJob" xmlns="http://www.springframework.org/schema/batch" incrementer="incrementer">
		<step id="j1.s1" parent="step1" />
	</job>

	<job id="job2" parent="simpleJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="j2.s1" parent="step1:master" />
	</job>

	<job id="infinite" parent="simpleJob" xmlns="http://www.springframework.org/schema/batch" incrementer="incrementer">
		<!-- To allow this job to be stopped we need it to actually execute the step multiple times -->
		<step id="infinite.s1" parent="step1.allow.start" next="infinite.s1"/>
	</job>
	
	<bean id="simpleJob" class="org.springframework.batch.core.job.SimpleJob"
		abstract="true">
		<property name="jobRepository" ref="jobRepository" />
		<property name="restartable" value="true" />
	</bean>

	<bean id="simpleStep"
		class="org.springframework.batch.core.step.item.SimpleStepFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="jobRepository" ref="jobRepository" />
		<property name="startLimit" value="100" />
		<property name="commitInterval" value="1" />
	</bean>

	<bean id="incrementer" class="org.springframework.batch.admin.sample.TrivialJobParametersIncrementer"/>

	<bean name="step1:master" class="org.springframework.batch.core.partition.support.PartitionStep">
		<property name="partitionHandler">
			<bean class="org.springframework.batch.core.partition.support.TaskExecutorPartitionHandler">
				<property name="step" ref="remoteStep1" />
				<property name="gridSize" value="${batch.grid.size}" />
				<property name="taskExecutor" ref="taskExecutor" />
			</bean>
		</property>
		<property name="stepExecutionSplitter">
			<bean class="org.springframework.batch.core.partition.support.SimpleStepExecutionSplitter">
				<constructor-arg ref="jobRepository" />
				<constructor-arg ref="step1" />
			</bean>
		</property>
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<bean id="taskExecutor" parent="throttledTaskExecutor">
		<property name="throttleLimit" value="100"/>
	</bean>

	<bean id="step1" parent="simpleStep">
		<property name="itemReader" ref="itemReader" />
		<property name="itemWriter" ref="itemWriter" />
	</bean>

	<bean id="step1.allow.start" parent="step1">
		<property name="allowStartIfComplete" value="true"/>
	</bean>

	<bean id="itemWriter" class="org.springframework.batch.admin.sample.ExampleItemWriter" p:fail="#{jobParameters['fail']}"
		scope="step" />
	<bean id="itemReader" class="org.springframework.batch.admin.sample.ExampleItemReader" scope="step" />

	<bean id="remoteStep1" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
		<property name="serviceInterface" value="org.springframework.batch.core.Step" />
		<property name="serviceUrl" value="${batch.remote.base.url}/steps/step1" />
	</bean>

</beans>
