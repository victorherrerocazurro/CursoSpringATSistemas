<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- Recursos No asegurados -->
	<http pattern="/pages/*" security="none" />
	<http pattern="/images/*" security="none" />
	<http pattern="/css/*" security="none" />

	<beans:bean id="rememberLoginFilter" class="xfiles.util.RemerberLoginFilter" />

	<!-- Spring Security 4 (Sigue dando error) -->
	<!-- <http auto-config="true" use-expressions="true" disable-url-rewriting="false"> 
		<headers disabled="true"/> <csrf disabled="true"/> -->

	<http auto-config="true" use-expressions="true"
		access-decision-manager-ref="accessDecisionManager">

		<!-- AÃ±adir un nuevo Filtro a la pila de Filtros -->
		<custom-filter ref="rememberLoginFilter" before="FORM_LOGIN_FILTER" />

		<!-- Asegurar todo e indicar que se emplee https -->
		<intercept-url pattern="/**" access="isAuthenticated()"
			requires-channel="https" />
		<!-- Indicar un formulario de Login particular -->
		<form-login login-page="/pages/custom-login.jsp"
			authentication-failure-url="/pages/custom-login.jsp?login_error" />
		<!-- Indicar que ha de ocurrir al hacer Logout -->
		<logout logout-success-url="/pages/disconnected.jsp"
			delete-cookies="JSESSIONID" />
		<!-- Activar RememberMe -->
		<remember-me key="xfiles" token-validity-seconds="86400" />
		<!-- Cuando los permisos son insuficientes, salta esta excepcion -->
		<access-denied-handler error-page="/pages/access-denied.jsp" />
		<!-- Derivar las peticiones por el puerto 8080 (http) al 8443 (https) -->
		<port-mappings>
			<port-mapping http="8080" https="8443" />
		</port-mappings>
		<!-- Control sobre el comportamiento de las sesiones, requiere de un FiltroWeb -->
		<session-management invalid-session-url="/pages/session-expired.jsp">
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</session-management>

	</http>

	<!-- Activa la lectura de anotaciones @Secured -->
	<global-method-security pre-post-annotations="enabled"
		secured-annotations="enabled" jsr250-annotations="enabled"
		access-decision-manager-ref="accessDecisionManagerBussines" />

	<authentication-manager>
		<authentication-provider>
			<!-- <user-service> <user name="Fernando" password="1234" authorities="ROLE_AGENT" 
				/> <user name="Mulder" password="fox" authorities="ROLE_SPECIAL_AGENT" /> 
				<user name="Scully" password="dana" authorities="ROLE_SPECIAL_AGENT" /> <user 
				name="Skinner" password="walter" authorities="ROLE_ASSISTANT_DIRECTOR" /> 
				</user-service> -->
			<password-encoder hash="md5">
				<salt-source user-property="username" />
			</password-encoder>
			<!-- <user-service> <user name="Fernando" password="94c0a821ece1959c48dbc789bcf024b9" 
				authorities="ROLE_AGENT" /> <user name="Mulder" password="cd2adcfcfae70a64c5870b7f79ae4945" 
				authorities="ROLE_SPECIAL_AGENT" /> <user name="Scully" password="4fb2b097cb9690d77cf7f2246b782fc3" 
				authorities="ROLE_SPECIAL_AGENT" /> <user name="Skinner" password="829679019772c945c70602096268737c" 
				authorities="ROLE_ASSISTANT_DIRECTOR" /> </user-service> -->
			<jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from user_authentication where username=?"
				authorities-by-username-query="select u1.username, u2.role from user_authentication u1, user_authorization u2 where u1.user_id = u2.user_id and u1.username =?" />
		</authentication-provider>
	</authentication-manager>

	<!-- Bean que inicializa en esquema de BD para la seguridad -->
	<!-- beans:bean id="dbUtil" class="xfiles.util.DbUtil"
		init-method="initialize">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean-->

	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver" />
		<beans:property name="url" value="jdbc:derby://localhost:1527/DerbyClientes;create=true" />
		<beans:property name="username" value="admin" />
		<beans:property name="password" value="admin" />
	</beans:bean>

	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.ConsensusBased">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean
					class="org.springframework.security.access.vote.AuthenticatedVoter" />
				<beans:bean
					class="org.springframework.security.web.access.expression.WebExpressionVoter" />
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>

	<beans:bean id="accessDecisionManagerBussines"
		class="org.springframework.security.access.vote.ConsensusBased">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean
					class="org.springframework.security.access.vote.AuthenticatedVoter" />
				<beans:bean
					class="org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter">
					<beans:constructor-arg>
						<beans:bean
							class="org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice" />
					</beans:constructor-arg>
				</beans:bean>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
</beans:beans>
