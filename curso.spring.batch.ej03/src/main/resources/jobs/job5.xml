<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">

	<import resource="../config/context.xml" />
	<import resource="../config/database.xml" />

	<bean id="domain" class="curso.spring.batch.ej03.modelo.Domain" />

	<bean id="customStepListener"
	class="curso.spring.batch.ej03.listeners.CustomStepListener" />
	<bean id="customItemReaderListener"
	class="curso.spring.batch.ej03.listeners.CustomItemReaderListener" 		/>
	<bean id="customItemWriterListener"
	class="curso.spring.batch.ej03.listeners.CustomItemWriterListener" 		/>

	<job id="readMultiFileJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="step1">
			<tasklet>
				<chunk reader="multiResourceReader" writer="flatFileItemWriter"
					commit-interval="2" />
				<listeners>
					<listener ref="customStepListener" />
					<listener ref="customItemReaderListener" />
					<listener ref="customItemWriterListener" />
				</listeners>
			</tasklet>
		</step>
	</job>

	<bean id="multiResourceReader"
		class=" org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources" value="file:csv/fragment*.csv" />
		<property name="delegate" ref="flatFileItemReader" />
	</bean>

	<bean id="flatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id, domain" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="domain" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="flatFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:csv/domain.all.csv" />
		<property name="appendAllowed" value="true" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="id, domain" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

</beans>


